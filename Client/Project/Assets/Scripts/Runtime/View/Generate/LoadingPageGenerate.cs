//------------------------------------------------------------------------------
//--  <autogenerated>
//--      This code was generated by a tool.
//--      Changes to this file may cause incorrect behavior and will be lost if
//--      the code is regenerated.
//--  </autogenerated>
//------------------------------------------------------------------------------

using Joy.MVVM;
using Joy.MVVM.DataBinding;
using UnityEngine;
using UnityEngine.UI;

[ViewSettingAttribute("Assets/Art/UI/Prefab/Common/LoadingPage.prefab")]
public class LoadingPageGenerate : Window
{
	public Slider _SldBar;
	public Text _TxtNum;
	public Text _TxtSpeed;
	public GameObject _ListListView;
	public GameObject _ListListViewContent;
	public GameObject _ListListViewTemplate;
	public IListView _ListView;
	public ReuseScrollView _LSclLoopListView;
	public GameObject _LSclLoopListViewContent;
	public GameObject _LSclLoopListViewTemplate;
	public IReuseListView _LoopListView;
	public Button _BtnSelect;
	public RectTransform _BGObj;
	public RectTransform _TopObj;

	protected override void OnGenerate()
	{
		_SldBar = transform.Find("_SldBar").GetComponent<Slider>();
		_TxtNum = transform.Find("_SldBar/_TxtNum").GetComponent<Text>();
		_TxtSpeed = transform.Find("_TxtSpeed").GetComponent<Text>();
		_ListListView = transform.Find("_ListListView").gameObject;
		_ListListViewContent = _ListListView.transform.Find("Content").gameObject;
		_ListListViewTemplate = _ListListView.transform.Find("Template").gameObject;
		_ListView = CreateListView();
		_ListView.Template = _ListListViewTemplate;
		_ListView.Content = _ListListViewContent;
		_LSclLoopListView = transform.Find("_LSclLoopListView").GetComponent<ReuseScrollView>();
		_LSclLoopListViewContent = _LSclLoopListView.transform.Find("Content").gameObject;
		_LSclLoopListViewTemplate = _LSclLoopListView.transform.Find("Template").gameObject;
		_LoopListView = CreateLoopListView();
		_LoopListView.Template = _LSclLoopListViewTemplate;
		_LoopListView.Content = _LSclLoopListViewContent;
		_LoopListView.Scroll = _LSclLoopListView;
		_BtnSelect = transform.Find("_BtnSelect").GetComponent<Button>();
		_BGObj = transform.Find("_BGObj").GetComponent<RectTransform>();
		AdaptionManager.Instance.AdapteBG(_BGObj);
		_TopObj = transform.Find("_TopObj").GetComponent<RectTransform>();
		AdaptionManager.Instance.AdapteTop(_TopObj);
	}

	protected void BindViewModel(BindingSet bindSet, ViewModel model)
	{
		var vm = model as LoadingPageViewModelGenerate;
		bindSet.Bind(vm).For(() => vm.SldBar, nameof(vm.SldBar)).To(Refresh_SldBar);
		bindSet.Bind(vm).For(() => vm.TxtNum, nameof(vm.TxtNum)).To(Refresh_TxtNum);
		bindSet.Bind(vm).For(() => vm.TxtSpeed, nameof(vm.TxtSpeed)).To(Refresh_TxtSpeed);
		bindSet.BindList(vm).For(() => vm.ListView, nameof(vm.ListView)).To(_ListView);
		bindSet.BindLoopList(vm).For(() => vm.LoopListView, nameof(vm.LoopListView)).To(_LoopListView);
		bindSet.BindButton(_BtnSelect).For(_BtnSelect.onClick).To(vm.OnClickSelect);
	}

	protected virtual void Refresh_SldBar(float value) { _SldBar.value = value; }
	protected virtual void Refresh_TxtNum(string value) { _TxtNum.text = value; }
	protected virtual void Refresh_TxtSpeed(string value) { _TxtSpeed.text = value; }
	protected virtual IListView CreateListView() { return AddSubView<ListView<ItemLoadingPageListViewGenerate>>(_ListListView.gameObject); }
	protected virtual IReuseListView CreateLoopListView() { return AddSubView<ReuseListView<ItemLoadingPageLoopListViewGenerate>>(_LSclLoopListView.gameObject); }
}

public class LoadingPageViewModelGenerate : ViewModel
{
	float _SldBar;
	public float SldBar
	{
		get { return _SldBar; }
		set { Set(ref _SldBar, value); }
	}
	string _TxtNum;
	public string TxtNum
	{
		get { return _TxtNum; }
		set { Set(ref _TxtNum, value); }
	}
	string _TxtSpeed;
	public string TxtSpeed
	{
		get { return _TxtSpeed; }
		set { Set(ref _TxtSpeed, value); }
	}
	ObservableList<ItemLoadingPageListViewViewModelGenerate> _ListView = new ObservableList<ItemLoadingPageListViewViewModelGenerate>();
	public ObservableList<ItemLoadingPageListViewViewModelGenerate> ListView
	{
		get { return _ListView; }
		set { Set(ref _ListView, value); }
	}
	ObservableList<ItemLoadingPageLoopListViewViewModelGenerate> _LoopListView = new ObservableList<ItemLoadingPageLoopListViewViewModelGenerate>();
	public ObservableList<ItemLoadingPageLoopListViewViewModelGenerate> LoopListView
	{
		get { return _LoopListView; }
		set { Set(ref _LoopListView, value); }
	}
	public virtual void OnClickSelect() { Joy.Debug.Log("click _BtnSelect"); }
}

public class ItemLoadingPageLoopListViewGenerate : ItemView
{
	public Image _ImgIcon;
	public Text _TxtName;
	public Toggle _TglGrpIcon;

	protected override void OnGenerate()
	{
		_ImgIcon = transform.Find("_ImgIcon").GetComponent<Image>();
		_TxtName = transform.Find("_TxtName").GetComponent<Text>();
		_TglGrpIcon = transform.Find("_TglGrpIcon").GetComponent<Toggle>();
	}

	protected override void OnDataContextChanged(ViewModel model)
	{
		BindViewModel(bindSet, model);
	}

	protected void BindViewModel(BindingSet bindSet, ViewModel model)
	{
		var vm = model as ItemLoadingPageLoopListViewViewModelGenerate;
		bindSet.Bind(vm).For(() => vm.ImgIcon, nameof(vm.ImgIcon)).To(Refresh_ImgIcon);
		bindSet.Bind(vm).For(() => vm.TxtName, nameof(vm.TxtName)).To(Refresh_TxtName);
		bindSet.Bind(vm).For(()=>vm.TglGrpIcon, nameof(vm.TglGrpIcon)).To((isOn)=>_TglGrpIcon.isOn = isOn);
		bindSet.BindToggleGroup(_TglGrpIcon).For(_TglGrpIcon.onValueChanged).To((value) => {
			if (parent != null && parent is IReuseListView reuseListView)
				BindingHelper.RefreshToggleList(reuseListView.List, vm, value, (vm, isOn) => {if (vm.TglGrpIcon != isOn) {vm.TglGrpIcon = isOn; vm.OnClickIcon(isOn);}});
			else if (parent != null && parent is IListView listView)
				bindSet.BindToggle(_TglGrpIcon).For(_TglGrpIcon.onValueChanged).To((isOn) => {if (vm.TglGrpIcon != isOn) {vm.TglGrpIcon = isOn; vm.OnClickIcon(isOn);}});
		});
	}

	protected virtual void Refresh_ImgIcon(Sprite value) { _ImgIcon.sprite = value; }
	protected virtual void Refresh_TxtName(string value) { _TxtName.text = value; }
}

public class ItemLoadingPageLoopListViewViewModelGenerate : ViewModel
{
	Sprite _ImgIcon;
	public Sprite ImgIcon
	{
		get { return _ImgIcon; }
		set { Set(ref _ImgIcon, value); }
	}
	string _TxtName;
	public string TxtName
	{
		get { return _TxtName; }
		set { Set(ref _TxtName, value); }
	}
	public virtual void OnClickIcon(bool isOn) { }
	bool _TglGrpIcon;
	public bool TglGrpIcon
	{
		get { return _TglGrpIcon; }
		set { Set(ref _TglGrpIcon, value); }
	}
}

public class ItemLoadingPageListViewGenerate : ItemView
{
	public Image _ImgIcon;
	public Button _BtnIcon;
	public Text _TxtName;

	protected override void OnGenerate()
	{
		_ImgIcon = transform.Find("_ImgIcon").GetComponent<Image>();
		_BtnIcon = transform.Find("_BtnIcon").GetComponent<Button>();
		_TxtName = transform.Find("_TxtName").GetComponent<Text>();
	}

	protected override void OnDataContextChanged(ViewModel model)
	{
		BindViewModel(bindSet, model);
	}

	protected void BindViewModel(BindingSet bindSet, ViewModel model)
	{
		var vm = model as ItemLoadingPageListViewViewModelGenerate;
		bindSet.Bind(vm).For(() => vm.ImgIcon, nameof(vm.ImgIcon)).To(Refresh_ImgIcon);
		bindSet.BindButton(_BtnIcon).For(_BtnIcon.onClick).To(vm.OnClickIcon);
		bindSet.Bind(vm).For(() => vm.TxtName, nameof(vm.TxtName)).To(Refresh_TxtName);
	}

	protected virtual void Refresh_ImgIcon(Sprite value) { _ImgIcon.sprite = value; }
	protected virtual void Refresh_TxtName(string value) { _TxtName.text = value; }
}

public class ItemLoadingPageListViewViewModelGenerate : ViewModel
{
	Sprite _ImgIcon;
	public Sprite ImgIcon
	{
		get { return _ImgIcon; }
		set { Set(ref _ImgIcon, value); }
	}
	public virtual void OnClickIcon() { Joy.Debug.Log("click _BtnIcon"); }
	string _TxtName;
	public string TxtName
	{
		get { return _TxtName; }
		set { Set(ref _TxtName, value); }
	}
}

